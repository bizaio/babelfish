/*******************************************************************************
 * Copyright (C) 2020 Biza Pty Ltd
 *
 * This program is free software: you can redistribute it and/or modify it under the terms of the
 * GNU Lesser General Public License as published by the Free Software Foundation, either version 3
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
 * even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *******************************************************************************/
package io.biza.babelfish.interfaces.cdr.banking.product;

import java.net.URI;
import javax.validation.Valid;
import org.inferred.freebuilder.FreeBuilder;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.biza.babelfish.converter.cdr.UriStringToUriConverter;
import io.biza.babelfish.converter.cdr.UriToUriStringConverter;
import io.swagger.v3.oas.annotations.media.Schema;

@Valid
@Schema(description = "Object that contains links to additional information on specific topics")
@FreeBuilder
@JsonDeserialize(builder = BankingProductAdditionalInformationV1.Builder.class)
public interface BankingProductAdditionalInformationV1 {
  
  /**
   * Fluent Builder Class
   * Generated by FreeBuilder
   *
   */
  class Builder extends BankingProductAdditionalInformationV1_Builder {}
  
  /**
   * Get a URL to a web page which provides a General Overview of the Product
   * 
   * @return a URL
   */
  @Schema(description = "General overview of the product", type = "string", format = "uri")
  @JsonSerialize(converter = UriToUriStringConverter.class)
  @JsonDeserialize(converter = UriStringToUriConverter.class)
  @JsonProperty("overviewUri")
  public URI overview();

  /**
   * Get the web page address for the Product Terms and Conditions
   * 
   * @return URI containing the T&C web page
   */
  @Schema(description = "Terms and conditions for the product", type = "string", format = "uri")
  @JsonSerialize(converter = UriToUriStringConverter.class)
  @JsonDeserialize(converter = UriStringToUriConverter.class)
  @JsonProperty("termsUri")
  public URI terms();

  /**
   * Eligibility rules and criteria for the product
   * 
   * @return URI containing eligibility rules for the product
   */
  @Schema(description = "Eligibility rules and criteria for the product", type = "string",
      format = "uri")
  @JsonSerialize(converter = UriToUriStringConverter.class)
  @JsonDeserialize(converter = UriStringToUriConverter.class)
  @JsonProperty("eligibilityUri")
  public URI eligibility();

  /**
   * Get a URI to a location with fees, pricing, discounts, exemptions and bonuses
   * 
   * @return a URI to a web page with fees, pricing, discounts etc.
   */
  @Schema(
      description = "Description of fees, pricing, discounts, exemptions and bonuses for the product",
      type = "string", format = "uri")
  @JsonSerialize(converter = UriToUriStringConverter.class)
  @JsonDeserialize(converter = UriStringToUriConverter.class)
  @JsonProperty("feesAndPricingUri")
  public URI feesAndPricing();

  /**
   * Get a URI to a Bundle that this product is part of
   * 
   * @return a URI to the Bundle description
   */
  @Schema(description = "Description of a bundle that this product can be part of", type = "string",
      format = "uri")
  @JsonSerialize(converter = UriToUriStringConverter.class)
  @JsonDeserialize(converter = UriStringToUriConverter.class)
  @JsonProperty("bundleUri")
  public URI bundle();
  
}
